C++ Code:
Iterative Method:

#include<iostream>
using namespace std;
struct Node
{
    int data;
    Node* next;
    Node(int val)
    {
        data=val;
        next=nullptr;
    }
};
void insertNewNodeAtEnd(Node* &head,int value)
{
    Node* newnode=new Node(value);
    if(head==NULL)
    {
        head=newnode;
    }
    else
    {
        Node* temp=head;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=newnode;
    }
}
Node* reverseLL(Node* head)
{
    Node* temp=head;
    Node* prev=nullptr;
    Node* next=nullptr;
    while(temp!=NULL)
    {
        next=temp->next;
        temp->next=prev;
        prev=temp;
        temp=next;
    }
    return prev;
}
Node* addOne(Node* head)
{
    head=reverseLL(head);
    Node* temp=head;
    int carry=1;
    while(temp!=NULL)
    {
        int sum=temp->data+carry;
        carry=sum/10;
        temp->data=sum%10;
        if(carry==0) break;
        if(temp->next==NULL && carry!=0)
        {
            Node* newnode=new Node(carry);
            temp->next=newnode;
            break;
        }
        temp=temp->next;
    }
    head=reverseLL(head);
    return head;
}
void printList(Node* head)
{
    Node* temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<nullptr<<endl;
}
int main()
{
    int n,val;
    cin>>n;
    Node* head=nullptr;
    for(int i=0;i<n;i++)
    {
        cin>>val;
        insertNewNodeAtEnd(head,val);
    }
    head=addOne(head);
    printList(head);
}

Input:
3
1 2 3

Output:
1->2->4->nullptr
